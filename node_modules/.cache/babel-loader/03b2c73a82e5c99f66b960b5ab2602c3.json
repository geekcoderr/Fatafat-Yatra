{"ast":null,"code":"var _jsxFileName = \"/home/geekcoderr/Astra/RealtimeProjects/FATAFAT-YATRA/src/components/booking/Booking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookingForm from \"./BookingForm\";\nimport BookProcessor from '../../pages/BookProcessor'; // Import BookProcessor component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Booking = () => {\n  _s();\n\n  const [buttonText, setButtonText] = useState(\"Check Availability\");\n  const [multi, setMulti] = useState([1]);\n  const [trip, setTrip] = useState([{\n    tripType: \"\",\n    vehicleType: \"\"\n  }]);\n  const [selectedFare, setSelectedFare] = useState(\"\");\n  const [regard, setRegard] = useState(5); // State to store booking information\n\n  const [bookingInfo, setBookingInfo] = useState({\n    from: '',\n    to: '',\n    date: '',\n    faretype: ''\n  });\n\n  const handleMouseEnter = () => {\n    setButtonText(\"...Let's CheckIt...\");\n  };\n\n  const handleMouseLeave = () => {\n    setButtonText(\"Check Availability\");\n  };\n\n  const handleFareSelection = (fareType, cost) => {\n    setSelectedFare(fareType);\n    setRegard(cost); // Update faretype in bookingInfo state\n\n    setBookingInfo(prevState => ({ ...prevState,\n      faretype: fareType\n    }));\n  }; // Handler function to update bookingInfo state with from and to locations\n\n\n  const handleLocationChange = (fromLocation, toLocation) => {\n    setBookingInfo(prevState => ({ ...prevState,\n      from: fromLocation,\n      to: toLocation\n    }));\n  }; // Handler function to update bookingInfo state with selected date\n\n\n  const handleDateChange = selectedDate => {\n    setBookingInfo(prevState => ({ ...prevState,\n      date: selectedDate\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-40 pb-20\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"max-w-5xl px-6 pt-8 pb-10 w-full mx-auto bg-white rounded-lg drop-shadow\",\n      id: \"bookpanel\",\n      children: [multi.map((item, index) => /*#__PURE__*/_jsxDEV(BookingForm, {\n        trip: trip,\n        fromValue: bookingInfo.from // Pass from location from bookingInfo state\n        ,\n        toValue: bookingInfo.to // Pass to location from bookingInfo state\n        ,\n        handleFromChange: e => handleLocationChange(e.target.value, bookingInfo.to) // Pass handler for from location change\n        ,\n        handleToChange: e => handleLocationChange(bookingInfo.from, e.target.value) // Pass handler for to location change\n        ,\n        handleDateChange: e => handleDateChange(e.target.value) // Pass handler for date change\n\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full text-center pt-10\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/bookinglist',\n            state: {\n              bookingInfo\n            } // Pass bookingInfo as state\n\n          },\n          id: \"bookButton\",\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: handleMouseLeave,\n          className: \"py-4 px-12 rounded-md bg-indigo-600 text-white font-bold\",\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Booking, \"aLJy0dDJOyEz8saFRLn/1mRA9o4=\");\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["React","useState","Link","BookingForm","BookProcessor","Booking","buttonText","setButtonText","multi","setMulti","trip","setTrip","tripType","vehicleType","selectedFare","setSelectedFare","regard","setRegard","bookingInfo","setBookingInfo","from","to","date","faretype","handleMouseEnter","handleMouseLeave","handleFareSelection","fareType","cost","prevState","handleLocationChange","fromLocation","toLocation","handleDateChange","selectedDate","map","item","index","e","target","value","pathname","state"],"sources":["/home/geekcoderr/Astra/RealtimeProjects/FATAFAT-YATRA/src/components/booking/Booking.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookingForm from \"./BookingForm\";\nimport BookProcessor from '../../pages/BookProcessor'; // Import BookProcessor component\n\nconst Booking = () => {\n    const [buttonText, setButtonText] = useState(\"Check Availability\");\n    const [multi, setMulti] = useState([1]);\n    const [trip, setTrip] = useState([{ tripType: \"\", vehicleType: \"\" }]);\n    const [selectedFare, setSelectedFare] = useState(\"\");\n    const [regard, setRegard] = useState(5);\n\n    // State to store booking information\n    const [bookingInfo, setBookingInfo] = useState({\n        from: '',\n        to: '',\n        date: '',\n        faretype: ''\n    });\n\n    const handleMouseEnter = () => {\n        setButtonText(\"...Let's CheckIt...\");\n    };\n\n    const handleMouseLeave = () => {\n        setButtonText(\"Check Availability\");\n    };\n\n    const handleFareSelection = (fareType, cost) => {\n        setSelectedFare(fareType);\n        setRegard(cost);\n        // Update faretype in bookingInfo state\n        setBookingInfo(prevState => ({\n            ...prevState,\n            faretype: fareType\n        }));\n    };\n\n    // Handler function to update bookingInfo state with from and to locations\n    const handleLocationChange = (fromLocation, toLocation) => {\n        setBookingInfo(prevState => ({\n            ...prevState,\n            from: fromLocation,\n            to: toLocation\n        }));\n    };\n\n    // Handler function to update bookingInfo state with selected date\n    const handleDateChange = (selectedDate) => {\n        setBookingInfo(prevState => ({\n            ...prevState,\n            date: selectedDate\n        }));\n    };\n\n    return (\n        <div className='pt-40 pb-20'>\n            <form className='max-w-5xl px-6 pt-8 pb-10 w-full mx-auto bg-white rounded-lg drop-shadow' id=\"bookpanel\">\n                {/* BookingForm component with props */}\n                {multi.map((item, index) => \n                    <BookingForm \n                        key={index} \n                        trip={trip} \n                        fromValue={bookingInfo.from} // Pass from location from bookingInfo state\n                        toValue={bookingInfo.to} // Pass to location from bookingInfo state\n                        handleFromChange={(e) => handleLocationChange(e.target.value, bookingInfo.to)} // Pass handler for from location change\n                        handleToChange={(e) => handleLocationChange(bookingInfo.from, e.target.value)} // Pass handler for to location change\n                        handleDateChange={(e) => handleDateChange(e.target.value)} // Pass handler for date change\n                    />\n                )}\n\n                {/* Button to navigate to BookProcessor with bookingInfo */}\n                <div className=\"w-full text-center pt-10\">\n                    <Link to={{\n                        pathname: '/bookinglist',\n                        state: { bookingInfo } // Pass bookingInfo as state\n                    }} id=\"bookButton\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} className='py-4 px-12 rounded-md bg-indigo-600 text-white font-bold'>{buttonText}</Link>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Booking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}